{"version":3,"sources":["logo.png","pages/Home.js","components/TodoElement.js","components/AddTodoMain.js","pages/Todo.js","components/EditTodo.js","components/RemoveTodo.js","components/MarkTodoAsDone.js","pages/TodoDetail.js","components/ClassElement.js","components/CreateClass.js","pages/Class.js","components/NoteElement.js","components/EditClass.js","components/RemoveClass.js","components/AddNote.js","pages/ClassDetail.js","components/EditNote.js","components/RemoveNote.js","pages/NoteDetail.js","components/AddTodo.js","components/Nav.js","pages/Redirect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","TodoElement","_id","subject","duedate","description","sidenote","is_done","onClick","window","location","replace","length","substring","Date","toISOString","split","Modal","setAppElement","AddTodoMain","creationStatus","useState","modalIsOpen","setModalIsOpen","todo","setTodo","creationState","setCreationState","handleSubmit","e","a","preventDefault","fetch","JSON","stringify","data","json","response","ok","Error","console","log","handleInput","field","persist","prevTodo","target","value","to","xmlns","width","height","viewBox","d","isOpen","overlayClassName","portalClassName","parentSelector","document","querySelector","htmlFor","type","onChange","name","id","min","Todo","todos","setTodos","completedTodos","setCompletedTodos","sortBy","setSortBy","useEffect","sort","todoA","todoB","filter","fetchData","handleChange","defaultValue","map","key","EditTodo","props","editState","setEditState","editStatus","handleEdit","RemoveTodo","deletionStatus","deletionState","setDeletionState","handleConfirm","UpdateTodoStatus","updateStatus","updateState","setUpdateState","TodoDetail","match","todoFound","setTodoFound","params","todoID","ClassElement","prof","start_date","end_date","notes","CreateClass","_class","setClass","prevClass","Class","classes","setClasses","classA","classB","fetchClasses","NoteElement","classID","title","content","resource","date","EditClass","RemoveClass","AddNote","submissionStatus","submissionState","setSubmissionState","note","setNote","prevNote","ClassDetail","classFound","setClassFound","noteA","noteB","fetchClass","undefined","EditNote","RemoveNote","NoteDetail","noteFound","setNoteFound","noteID","fetchNote","AddTodo","Nav","Redirect","search","App","src","logo","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.be66da35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a6a3d60b.png\";","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div className=\"page-title\">\n            Home\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TodoElement = ({ _id, subject, duedate, description, sidenote, is_done }) => {\n    return (\n        <div className=\"flex-item\" onClick={() => window.location.replace(`/todo/${_id}`)}>\n            <div className=\"flex-inner-title\">\n                {subject.length > 20 ? `${subject.substring(0,20)}...` : subject}\n            </div>\n            <div className=\"flex-inner-text\">\n                <div><strong>Due date: </strong>{duedate}</div>\n                <div><strong>Description: </strong>{description.length > 20 ? `${description.substring(0, 20)}...` : description} </div>\n                <div><strong>Side notes: </strong>{sidenote ? (sidenote.length > 20 ? `${sidenote.substring(0,20)}...` : sidenote) : 'None'} </div>\n                <div>\n                    {(duedate < new Date().toISOString().split(\"T\")[0] && !is_done) && 'The due date of this todo has passed!'}\n                </div>\n                <div>Click to view details!</div>\n            </div>\n        </div>\n    );\n};\n\nexport default TodoElement;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\n\nModal.setAppElement('#root')\n\nconst AddTodoMain = () => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [todo, setTodo] = useState({\n        'subject': '',\n        'duedate': '',\n        'description': '',\n        'sidenote': ''\n    });\n    const [creationState, setCreationState] = useState('');\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setCreationState('LOADING');\n        try{\n            let data = await fetch('/api/todo', {\n                'method': 'POST',\n                'mode': 'cors',\n                'headers': {\n                    'content-type': 'application/json'\n                },\n                'body': JSON.stringify(todo)\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setCreationState('SUCCESS');\n        }catch(err){\n            setCreationState('ERROR');\n            console.log(err);\n        }\n    }\n\n    // Handle input changes\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setTodo(prevTodo => {\n            return {...prevTodo, [field]: e.target.value};\n        });\n    };\n\n    // Render status message\n\n    let creationStatus;\n\n    if(creationState === 'LOADING') creationStatus = <div>Loading</div>;\n    else if(creationState === 'SUCCESS') creationStatus = (<div>Todo successfully added! <Link className=\"modal-redirect\" to='/redirect?url=/todo' onClick={() => setModalIsOpen(false)}>View todo list</Link></div>);\n    else if(creationState === 'ERROR') creationStatus = (<div>Please fill in all the required fields!</div>);\n\n    return (\n        <>\n            <div className=\"flex-item\" onClick={() => setModalIsOpen(true)}>\n                <div className=\"flex-inner-title\">\n                    Add a todo\n                </div>\n                <div className=\"add-todo\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n                </div>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div>\n                    <div className=\"close-modal\"><button onClick={() => setModalIsOpen(false)}>X</button></div>\n                    <div className=\"modal-title\">\n                        Add todo\n                    </div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"subject\">*Subject: </label>\n                            <input type=\"text\" value={todo.subject} onChange={e => handleInput(e, 'subject')} name=\"subject\" id=\"subject\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"duedate\">*Due date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={todo.duedate} onChange={e => handleInput(e, 'duedate')} name=\"duedate\" id=\"duedate\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"description\">*Description: </label>\n                            <textarea value={todo.description} onChange={e => handleInput(e, 'description')} name=\"description\" id=\"description\"></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Sidenotes: </label>\n                            <textarea value={todo.sidenote} onChange={e => handleInput(e, 'sidenote')} name=\"sidenote\" id=\"sidenote\"></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {creationStatus}\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\n\nexport default AddTodoMain;\n","import React, { useState, useEffect } from 'react';\nimport TodoElement from '../components/TodoElement.js';\nimport AddTodoMain from '../components/AddTodoMain.js'\n\nconst Todo = () => {\n\n    // Set state variables\n\n    const [todos, setTodos] = useState([]);\n    const [completedTodos, setCompletedTodos] = useState([]);\n    const [sortBy, setSortBy] = useState('DATE_ASCENDING');\n\n    // Fetch todo on sort changes\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try{\n                const data = await fetch('/api/todo');\n                const todos = await data.json();\n                if(!data.ok) throw new Error(todos);\n                switch(sortBy){\n                    case 'DATE_ASCENDING':\n                        todos.sort((todoA, todoB) => {\n                            if(todoA.duedate > todoB.duedate) return 1;\n                            if(todoA.duedate < todoB.duedate) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'DATE_DESCENDING':\n                        todos.sort((todoA, todoB) => {\n                            if(todoA.duedate < todoB.duedate) return 1;\n                            if(todoA.duedate > todoB.duedate) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'SUBJECT':\n                        todos.sort((todoA, todoB) => {\n                            if(todoA.subject > todoB.subject) return 1;\n                            if(todoA.subject < todoB.subject) return -1;\n                            return 0;\n                        });\n                        break;\n                };\n                setTodos(todos.filter(todo => !todo.is_done));\n                setCompletedTodos(todos.filter(todo => todo.is_done));\n            }catch(err){\n                console.log(err);\n            };\n        };\n        fetchData();\n    }, [sortBy]);\n\n    // Handle change in sort method\n\n    const handleChange = e => {\n        e.persist();\n        setSortBy(e.target.value);\n    }\n\n    return (\n        <div>\n            <div className=\"page-title\">Todos</div>\n            <div className=\"custom-select\">\n                <select onChange={e => handleChange(e)} defaultValue=\"DATE_ASCENDING\">\n                    <option value=\"DATE_ASCENDING\">Date ascending</option>\n                    <option value=\"DATE_DESCENDING\">Date descending</option>\n                    <option value=\"SUBJECT\">Subject</option>\n                </select>\n                <span className=\"custom-arrow\"></span>\n            </div>\n            <div>\n                <div className=\"page-subtitle\">Current todos</div>\n                    <div className=\"flex-container\">\n                        <AddTodoMain />\n                        {todos.map(todo => (<TodoElement key={todo._id} _id={todo._id} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} is_done={false}/>))}\n                    </div>\n            </div>\n            <div>\n                <div className=\"page-subtitle\">Completed todos</div>\n                {!(completedTodos.length === 0) ? (\n                    <div className=\"flex-container\">\n                        {completedTodos.map(todo => (\n                            <TodoElement key={todo._id} _id={todo._id} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} is_done={true}/>\n                        ))}\n                    </div>\n                ) : (\n                    <div className=\"not-found\">\n                        There are currently no completed todos!\n                    </div>\n            )}\n            </div>\n        </div>\n    );\n};\n\nexport default Todo;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nconst EditTodo = (props) => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [editState, setEditState] = useState('');\n    const [todo, setTodo] = useState(props);\n\n    useEffect(() => {\n        setTodo(props);\n    }, [props])\n\n    // Handle form input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setTodo(prevTodo => {\n            return {...prevTodo, [field]: e.target.value};\n        });\n    };\n\n    // Handle form submission\n\n    const handleEdit = async e => {\n        e.preventDefault();\n        setEditState('LOADING');\n        try{\n            let data = await fetch(`/api/todo/${props._id}`, {\n                'method': 'PATCH',\n                'mode': 'cors',\n                'headers': {\n                    'content-type': 'application/json'\n                },\n                'body': JSON.stringify(todo)\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setEditState('SUCCESS');\n        }catch(err){\n            setEditState('ERROR');\n            console.log(err);\n        }\n    }\n\n    // Handle status message\n\n    let editStatus;\n    if(editState === 'LOADING') editStatus = <div>Loading</div>;\n    else if(editState === 'SUCCESS') editStatus = <div>Success! <Link className=\"modal-redirect\" to={`/redirect?url=/todo/${props._id}`} onClick={() => setModalIsOpen(false)}>View edited todo</Link></div>;\n    else if(editState === 'ERROR') editStatus = <div>Please fill in all the required fields!</div>;\n\n    return (\n        <div>\n            <div>\n                <button className=\"button-main\" onClick={() => setModalIsOpen(true)}>Edit Todo</button>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Edit todo\n                </div>\n                <form className=\"modal-form\">\n                    <div>\n                            <label htmlFor=\"subject\">*Subject: </label>\n                            <input type=\"text\" value={todo.subject} onChange={e => handleInput(e, 'subject')} name=\"subject\" id=\"subject\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"duedate\">*Due date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={todo.duedate} onChange={e => handleInput(e, 'duedate')} name=\"duedate\" id=\"duedate\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"description\">*Description: </label>\n                            <textarea value={todo.description} onChange={e => handleInput(e, 'description')} name=\"description\" id=\"description\"></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Sidenotes: </label>\n                            <textarea value={todo.sidenote} onChange={e => handleInput(e, 'sidenote')} name=\"sidenote\" id=\"sidenote\"></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleEdit(e)}>Confirm edit</button>\n                        <div className=\"modal-status\">\n                            {editStatus}\n                        </div>\n                </form>\n            </Modal>\n        </div>\n    );\n};\n\nexport default EditTodo;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nconst RemoveTodo = ({ _id, subject, duedate, description, sidenote }) => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [deletionState, setDeletionState] = useState('');\n\n    // Handle form submission\n\n    const handleConfirm = async e => {\n        e.preventDefault();\n        setDeletionState('LOADING');\n        try{\n            let data = await fetch(`/api/todo/${_id}`, {\n                'method': 'DELETE',\n                'mode': 'cors'\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setDeletionState('SUCCESS');\n        }catch(err){\n            setDeletionState('ERROR');\n            console.log(err);\n        }\n    };\n\n    // Handle status message\n\n    let deletionStatus;\n    if(deletionState === 'LOADING') deletionStatus = <div>Loading</div>;\n    else if(deletionState === 'SUCCESS') deletionStatus = <div>Successfully removed todo! <Link to=\"/todo\" className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>Go back to todos list</Link></div>;\n    else if(deletionState === 'ERROR') deletionStatus = <div>Error! Check console for details</div>;\n\n\n    return (\n        <div>\n            <div>\n                <button className=\"button-main\" onClick={() => setModalIsOpen(true)}>Remove Todo</button>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Are you sure you want to remove the following todo?\n                </div>\n                <div className=\"modal-list\">\n                    <ul>\n                        <li>Subject: {subject}</li>\n                        <li>Due date: {duedate}</li>\n                        <li>Description: {description}</li>\n                        <li>Side notes: {sidenote || 'None'}</li>\n                    </ul>\n                </div>\n                <div>\n                    <button className=\"button-main\" onClick={e => handleConfirm(e)}>Confirm</button>\n                    <button className=\"button-main\" type=\"submit\" onClick={() => {setModalIsOpen(false);}}>Cancel</button>\n                </div>\n                <div className=\"modal-status\">\n                    {deletionStatus}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default RemoveTodo;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nconst UpdateTodoStatus = ({ _id, subject, duedate, description, sidenote, is_done }) => {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [updateState, setUpdateState] = useState('');\n\n    const handleConfirm = async e => {\n        e.preventDefault();\n        setUpdateState('LOADING');\n        try{\n            let data = await fetch(`/api/todo/${_id}`, {\n                'method': 'PATCH',\n                'mode': 'cors',\n                'headers': {\n                    'content-type': 'application/json'\n                },\n                'body': JSON.stringify({'is_done': !is_done})\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setUpdateState('SUCCESS');\n        }catch(err){\n            setUpdateState('ERROR');\n            console.log(err);\n        }\n    };\n\n    let updateStatus;\n    if(updateState === 'LOADING') updateStatus = <div>Loading</div>;\n    else if(updateState === 'SUCCESS') updateStatus = <div>Success! <Link to='/todo' className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>Go back to todo list</Link></div>;\n    else if(updateState === 'ERROR') updateStatus = <div>Error! Check console for details</div>;\n\n    return (\n        <div>\n            <div>\n                <button className=\"button-main\" onClick={() => setModalIsOpen(true)}>Mark todo as {is_done ? 'ongoing' : 'complete'}</button>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Are you sure you want to mark the following todo as {is_done ? 'ongoing' : 'complete'}?\n                </div>\n                <div className=\"modal-list\">\n                    <ul>\n                        <li>Subject: {subject}</li>\n                        <li>Due date: {duedate}</li>\n                        <li>Description: {description}</li>\n                        <li>Side notes: {sidenote || 'None'}</li>\n                    </ul>\n                </div>\n                <div>\n                    <button className=\"button-main\" onClick={e => handleConfirm(e)}>Confirm</button>\n                    <button className=\"button-main\" type=\"submit\" onClick={() => {setModalIsOpen(false);}}>Cancel</button>\n                </div>\n                <div className=\"modal-status\">\n                    {updateStatus}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default UpdateTodoStatus;\n","import React, { useState, useEffect } from 'react';\nimport EditTodo from '../components/EditTodo.js';\nimport RemoveTodo from '../components/RemoveTodo.js';\nimport UpdateTodoStatus from '../components/MarkTodoAsDone.js';\n\nconst TodoDetail = ({ match }) => {\n\n    const [todo, setTodo] = useState({});\n    const [todoFound, setTodoFound] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try{\n                const data = await fetch(`/api/todo/${match.params.todoID}`);\n                const todo = await data.json();\n                if(data.ok) setTodoFound(true);\n                if(!data.ok) throw new Error(todo);\n                setTodo(todo);\n            }catch(err){\n                console.log(err)\n            }\n        }\n        fetchData();\n    }, []);\n\n    if(!todoFound) return <div className=\"not-found\">Todo not found!</div>\n\n    return (\n        <div>\n            <div className=\"page-title\">Todo Details</div>\n            <div className=\"page-info\">\n                <div className=\"value\">\n                    {todo.subject}\n                </div>\n                <label className=\"key\">Subject</label>\n                <div className=\"value\">\n                    {todo.duedate}\n                </div>\n                <label className=\"key\">Due date</label>\n                <div className=\"value\">\n                    {todo.description}\n                </div>\n                <label className=\"key\">Description</label>\n                <div className=\"value\">\n                    {todo.sidenote || 'None'}\n                </div>\n                <label className=\"key\">Side notes</label>\n                <div className=\"value\">\n                    {todo.is_done ? 'Completed' : 'Ongoing'}\n                </div>\n                <label className=\"key\">Status</label>\n            </div>\n            <div>\n                <EditTodo _id={todo._id} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} />\n                <UpdateTodoStatus _id={todo._id} is_done={todo.is_done} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} />\n                <RemoveTodo _id={todo._id} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} />\n            </div>\n        </div>\n    );\n};\n\nexport default TodoDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ClassElement = ({ _id, name, prof, start_date, end_date, notes }) => {\n    return (\n        <div className=\"flex-item\" onClick={() => window.location.replace(`/class/${_id}`)}>\n            <div className=\"flex-inner-title\">{name.length > 16 ? `${name.substring(0,16)}...` : name}</div>\n            <div className=\"flex-inner-text\">\n                <div><strong>Professor: </strong>{prof ? (prof.length > 20 ? `${prof.substring(0,20)}...` : prof) : 'N/A'}</div>\n                <div><strong>Start date: </strong>{start_date}</div>\n                <div><strong>End date: </strong>{end_date}</div>\n                <div><strong>Number of notes: </strong>{notes.length}</div>\n                <div>\n                    Click to view details!\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ClassElement;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\n\nconst CreateClass = () => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [_class, setClass] = useState({\n        'name': '',\n        'prof': '',\n        'start_date': '',\n        'end_date': ''\n    });\n    const [creationState, setCreationState] = useState('');\n\n    // Handle form input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setClass(prevClass => {\n            return {...prevClass, [field]: e.target.value};\n        });\n    };\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setCreationState('LOADING');\n        try{\n            let data = await fetch('/api/class', {\n                'method': 'POST',\n                'mode': 'cors',\n                'headers': {\n                    'content-type': 'application/json'\n                },\n                'body': JSON.stringify(_class)\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setClass(prevClass => ({...prevClass, '_id': response._id}));\n            setCreationState('SUCCESS');\n        }catch(err){\n            setCreationState('ERROR');\n            console.log(err);\n        }\n    }\n\n    // Render status message\n\n    let creationStatus;\n    if(creationState === 'LOADING') creationStatus = <div>Loading</div>;\n    else if(creationState === 'SUCCESS') creationStatus = <div>Success! <Link className=\"modal-redirect\" to={`/class/${_class._id}`} onClick={() => setModalIsOpen(false)}>Go to created class</Link></div>;\n    else if(creationState === 'ERROR') creationStatus = <div>Please fill in all the required fields!</div>;\n\n    return (\n        <>\n            <div className=\"flex-item\" onClick={() => setModalIsOpen(true)}>\n                <div className=\"flex-inner-title\">\n                    Create a new class\n                </div>\n                <div className=\"add-class\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n                </div>\n            </div>\n            <div>\n                <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                    <div className=\"close-modal\"><button className=\"close-modal\" onClick={() => setModalIsOpen(false)}>X</button></div>\n                    <div className=\"modal-title\">\n                        Create class\n                    </div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"name\">*Name: </label>\n                            <input type=\"text\" value={_class.subject} onChange={e => handleInput(e, 'name')} name=\"name\" id=\"name\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"prof\">Professor: </label>\n                            <input type=\"text\" value={_class.duedate} onChange={e => handleInput(e, 'prof')} name=\"prof\" id=\"prof\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"start_date\">*Start date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={_class.description} onChange={e => handleInput(e, 'start_date')} name=\"start_date\" id=\"start_date\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"end_date\">*End date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={_class.sidenote} onChange={e => handleInput(e, 'end_date')} name=\"end_date\" id=\"end_date\"></input>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {creationStatus}\n                    </div>\n                </Modal>\n            </div>\n        </>\n    );\n};\n\nexport default CreateClass;\n","import React, { useState, useEffect } from 'react';\nimport ClassElement from '../components/ClassElement.js';\nimport CreateClass from '../components/CreateClass.js';\n\nconst Class = () => {\n\n    const [classes, setClasses] = useState([]);\n    const [sortBy, setSortBy] = useState('START_DATE_ASCENDING');\n\n    // Fetch classes\n\n    useEffect(() => {\n        const fetchClasses = async () => {\n            try{\n                let data = await fetch('/api/class');\n                let classes = await data.json();\n                if(!data.ok) throw new Error(classes);\n                switch(sortBy){\n                    case 'START_DATE_ASCENDING':\n                        classes.sort((classA, classB) => {\n                            if(classA.start_date > classB.start_date) return  1;\n                            if(classA.start_date < classB.start_date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'START_DATE_DESCENDING':\n                        classes.sort((classA, classB) => {\n                            if(classA.start_date < classB.start_date) return  1;\n                            if(classA.start_date > classB.start_date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'END_DATE_ASCENDING':\n                        classes.sort((classA, classB) => {\n                            if(classA.end_date > classB.end_date) return  1;\n                            if(classA.end_date < classB.end_date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'END_DATE_DESCENDING':\n                        classes.sort((classA, classB) => {\n                            if(classA.end_date < classB.end_date) return  1;\n                            if(classA.end_date > classB.end_date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'NAME':\n                        classes.sort((classA, classB) => {\n                            if(classA.name > classB.name) return  1;\n                            if(classA.name < classB.name) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'NOTES':\n                        classes.sort((classA, classB) => {\n                            if(classA.notes.length < classB.notes.length) return 1;\n                            if(classA.notes.length > classB.notes.length) return -1;\n                            return 0;\n                        });\n                        break;\n                }\n                setClasses(classes);\n            }catch(err){\n                console.log(err);\n            };\n        }\n        fetchClasses();\n    }, [sortBy])\n\n    // Handle change on sort method\n\n    const handleChange = e => {\n        e.persist();\n        setSortBy(e.target.value);\n    }\n\n    return (\n        <div>\n            <div className=\"page-title\">\n                Classes\n            </div>\n            <div className=\"custom-select\">\n                <select defaultValue=\"START_DATE_ASCENDING\" onChange={e => handleChange(e)}>\n                    <option value=\"START_DATE_ASCENDING\">Start date ascending</option>\n                    <option value=\"START_DATE_DESCENDING\">Start date descending</option>\n                    <option value=\"END_DATE_ASCENDING\">End date ascending</option>\n                    <option value=\"END_DATE_DESCENDING\">End date descending</option>\n                    <option value=\"NAME\">Name</option>\n                    <option value=\"NOTES\">Number of notes</option>\n                </select>\n                <span className=\"custom-arrow\"></span>\n            </div>\n            <div className=\"flex-container\">\n                <CreateClass />\n                {classes.map(_class => (<ClassElement key={_class._id} _id={_class._id} name={_class.name} prof={_class.prof} start_date={_class.start_date} end_date={_class.end_date} notes={_class.notes} />))}\n            </div>\n        </div>\n    );\n};\n\nexport default Class;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NoteElement = ({ _id, classID, title, content, resource, sidenote, date }) => {\n    return (\n        <div className=\"flex-item\" onClick={() => window.location.replace(`/class/${classID}/${_id}`)}>\n            <div className=\"flex-inner-title\">\n                {title.length > 20 ? `${title.substring(0,20)}...` : title}\n            </div>\n            <div className=\"flex-inner-text\">\n                <div><strong>Content: </strong>{content.length > 20 ? `${content.substring(0,20)}...` : content}</div>\n                <div><strong>Extra resources: </strong>{resource ? (resource.length > 20 ? `${resource.substring(0,20)}...` : resource) : 'None'}</div>\n                <div><strong>Side notes: </strong>{sidenote ? (sidenote.length > 20 ? `${sidenote.substring(0,20)}...` : sidenote) : 'None'}</div>\n                <div><strong>Date added: {date.split('T')[0]}</strong></div>\n                <div>Click to view details!</div>\n            </div>\n        </div>\n    );\n};\n\nexport default NoteElement;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nconst EditClass = (props) => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [editState, setEditState] = useState('');\n    const [_class, setClass] = useState(props);\n\n    useEffect(() => {\n        setClass(props)\n    }, [props]);\n\n    // Handle form input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setClass(prevClass => {\n            return {...prevClass, [field]: e.target.value};\n        });\n    };\n\n    // Handle form submission\n\n    const handleEdit = async e => {\n        e.preventDefault();\n        setEditState('LOADING');\n        try{\n            let data = await fetch(`/api/class/${props._id}`, {\n                'method': 'PATCH',\n                'mode': 'cors',\n                'headers': {\n                    'content-type': 'application/json'\n                },\n                'body': JSON.stringify(_class)\n            });\n            let response = await data.json();\n            console.log(response);\n            if(!data.ok) throw new Error(response);\n            setEditState('SUCCESS');\n        }catch(err){\n            setEditState('ERROR');\n            console.log(err);\n        }\n    }\n\n    let editStatus;\n    if(editState === 'LOADING') editStatus = <div>Loading</div>;\n    else if(editState === 'SUCCESS') editStatus = <div>Success! <Link className=\"modal-redirect\" to={`/redirect?url=/class/${props._id}`} onClick={() => setModalIsOpen(false)}>View edited class</Link></div>;\n    else if(editState === 'ERROR') editStatus = <div>Please fill in all the required fields!</div>;\n\n    return (\n        <div>\n            <button className=\"button-main\" onClick={() => setModalIsOpen(true)}>Edit this class</button>\n            <div>\n                <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                    <div className=\"close-modal\">\n                        <button onClick={() => setModalIsOpen(false)}>X</button>\n                    </div>\n                    <div className=\"modal-title\">\n                        Edit class\n                    </div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"name\">*Name: </label>\n                            <input type=\"text\" value={_class.name} onChange={e => handleInput(e, 'name')} name=\"name\" id=\"name\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"prof\">Professor: </label>\n                            <input type=\"text\" value={_class.prof} onChange={e => handleInput(e, 'prof')} name=\"prof\" id=\"prof\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"start_date\">*Start date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={_class.start_date} onChange={e => handleInput(e, 'start_date')} name=\"start_date\" id=\"start_date\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"end_date\">*End date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={_class.end_date} onChange={e => handleInput(e, 'end_date')} name=\"end_date\" id=\"end_date\"></input>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleEdit(e)}>Confirm edit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {editStatus}\n                    </div>\n                </Modal>\n            </div>\n        </div>\n    );\n};\n\nexport default EditClass;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nconst RemoveClass = ({ _id, name, prof, start_date, end_date }) => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [deletionState, setDeletionState] = useState('');\n\n    // Handle form submission\n\n    const handleConfirm = async e => {\n        e.preventDefault();\n        setDeletionState('LOADING');\n        try{\n            let data = await fetch(`/api/class/${_id}`, {\n                'method': 'DELETE',\n                'mode': 'cors'\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setDeletionState('SUCCESS');\n        }catch(err){\n            setDeletionState('ERROR');\n            console.log(err);\n        }\n    };\n\n    let deletionStatus;\n    if(deletionState === 'LOADING') deletionStatus = <div>Loading</div>;\n    else if(deletionState === 'SUCCESS') deletionStatus = <div>Successfully removed class! <Link to=\"/class\" className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>Go back to class list</Link></div>;\n    else if(deletionState === 'ERROR') deletionStatus = <div>Error! Check console for details</div>;\n\n\n    return (\n        <div>\n            <div>\n                <button className=\"button-main\" onClick={() => setModalIsOpen(true)}>Remove this class</button>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Are you sure you want to remove the following class?\n                </div>\n                <div className=\"modal-list\">\n                    <ul>\n                        <li>Name: {name}</li>\n                        <li>Professor: {prof || 'N/A'}</li>\n                        <li>Start date: {start_date}</li>\n                        <li>End date: {end_date}</li>\n                    </ul>\n                </div>\n                <div>\n                    <button className=\"button-main\" onClick={e => handleConfirm(e)}>Confirm</button>\n                    <button className=\"button-main\" type=\"submit\" onClick={() => {setModalIsOpen(false);}}>Cancel</button>\n                </div>\n                <div className=\"modal-status\">\n                    {deletionStatus}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default RemoveClass;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nconst AddNote = ({ _id }) => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [submissionState, setSubmissionState] = useState('');\n    const [note, setNote] = useState({\n        'title': '',\n        'content': '',\n        'resource': '',\n        'sidenote': '',\n    });\n\n    // Handle form input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setNote(prevNote => ({...prevNote, [field]: e.target.value}))\n    }\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setSubmissionState('LOADING')\n        try{\n            let data = await fetch(`/api/note/${_id}`, {\n                'method': 'POST',\n                'mode': 'cors',\n                'headers': {\n                    'content-type': 'application/json'\n                },\n                'body': JSON.stringify(note)\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setSubmissionState('SUCCESS');\n        }catch(err){\n            setSubmissionState('ERROR');\n            console.log(err);\n        }\n    }\n\n    // Handle status message\n\n    let submissionStatus;\n    if(submissionState === 'LOADING') submissionStatus = <div>Loading</div>\n    else if(submissionState === 'SUCCESS') submissionStatus = <div>Note created! <Link className=\"modal-redirect\" to={`/redirect?url=/class/${_id}`} onClick={() => setModalIsOpen(false)}>Return to class</Link></div>\n    else if(submissionState === 'ERROR') submissionStatus = <div>Please fill in all the required fields!</div>\n\n    return (\n        <>\n            <div className=\"flex-item\" onClick={() => setModalIsOpen(true)}>\n                <div className=\"flex-inner-title\">Add a new note</div>\n                <div className=\"add-note\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n                </div>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"title\">*Title: </label>\n                            <input type=\"text\" value={note.title} name=\"title\" id=\"title\" onChange={e => handleInput(e, 'title')}></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"content\">*Content: </label>\n                            <textarea value={note.content} name=\"content\" id=\"content\" onChange={e => handleInput(e, 'content')}></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"resource\">Extra resources: </label>\n                            <textarea value={note.resource} name=\"resource\" id=\"resource\" onChange={e => handleInput(e, 'resource')}></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Side notes: </label>\n                            <textarea value={note.sidenote} name=\"sidenote\" id=\"sidenote\" onChange={e => handleInput(e, 'sidenote')}></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                        <div>\n                            {submissionStatus}\n                        </div>\n                    </form>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default AddNote;\n","import React, { useState, useEffect } from 'react';\nimport NoteElement from '../components/NoteElement.js';\nimport EditClass from '../components/EditClass.js';\nimport RemoveClass from '../components/RemoveClass.js';\nimport AddNote from '../components/AddNote.js';\n\nconst ClassDetail = ({ match }) => {\n\n    // Set state variable\n\n    const [_class, setClass] = useState({});\n    const [classFound, setClassFound] = useState(false);\n    const [sortBy, setSortBy] = useState('DATE_ASCENDING');\n\n    // Fetch class from DB\n\n    useEffect(() => {\n        const fetchClass = async () => {\n            try{\n                let data = await fetch(`/api/class/${match.params.classID}`);\n                let _class = await data.json();\n                if(data.ok) setClassFound(true);\n                if(!data.ok) throw new Error(_class);\n                switch(sortBy){\n                    case 'DATE_ASCENDING':\n                        _class.notes.sort((noteA, noteB) => {\n                            if(noteA.date > noteB.date) return 1;\n                            if(noteA.date < noteB.date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'DATE_DESCENDING':\n                        _class.notes.sort((noteA, noteB) => {\n                            if(noteA.date < noteB.date) return 1;\n                            if(noteA.date > noteB.date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'NOTE_LENGTH':\n                        _class.notes.sort((noteA, noteB) => {\n                            if(noteA.content.length < noteB.content.length) return 1;\n                            if(noteA.content.length > noteB.content.length) return -1;\n                            return 0;\n                        });\n                        break;\n                };\n                setClass(_class);\n            }catch(err){\n                console.log(err);\n            }\n        };\n        fetchClass();\n    }, [sortBy]);\n\n    // Handle sort method change\n\n    const handleChange = e => {\n        e.persist();\n        setSortBy(e.target.value);\n    }\n\n    if(!classFound) return <div className=\"not-found\">Class not found!</div>\n\n    return (\n        <div>\n            <div className=\"page-title\">\n                Class Details\n            </div>\n            <div className=\"page-info\">\n                <div className=\"value\">\n                    {_class.name}\n                </div>\n                <label className=\"key\">Name</label>\n                <div className=\"value\">\n                    {_class.prof || 'N/A'}\n                </div>\n                <label className=\"key\">Professor</label>\n                <div className=\"value\">\n                    {_class.start_date}\n                </div>\n                <label className=\"key\">Start date</label>\n                <div className=\"value\">\n                    {_class.end_date}\n                </div>\n                <label className=\"key\">End date</label>\n            </div>\n            <div className=\"page-subtitle\">\n                Notes for this class\n            </div>\n            <div className=\"custom-select\">\n                <select defaultValue=\"DATE_ASCENDING\" onChange={e => handleChange(e)}>\n                    <option value=\"DATE_ASCENDING\">Date ascending</option>\n                    <option value=\"DATE_DESCENDING\">Date descending</option>\n                    <option value=\"NOTE_LENGTH\">Note length</option>\n                </select>\n                <span className=\"custom-arrow\"></span>\n            </div>\n            <div className=\"flex-container\">\n                <AddNote _id={_class._id} />\n                {!(_class.notes === undefined || _class.notes.length === 0) && _class.notes.map(note => (<NoteElement key={note._id} classID={match.params.classID} _id={note._id} title={note.title} content={note.content} resource={note.resource} sidenote={note.sidenote} date={note.date} />))}\n            </div>\n            <div>\n                <EditClass _id={_class._id} name={_class.name} prof={_class.prof} start_date={_class.start_date} end_date={_class.end_date} />\n                <RemoveClass _id={_class._id} name={_class.name} prof={_class.prof} start_date={_class.start_date} end_date={_class.end_date} />\n            </div>\n        </div>\n    );\n};\n\nexport default ClassDetail;\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\n\nconst EditNote = (props) => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [note, setNote] = useState(props);\n    const [editState, setEditState] = useState('');\n\n    useEffect(() => {\n        setNote(props)\n    }, [props]);\n\n    // Handle input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setNote(prevNote => ({...prevNote, [field]: e.target.value}));\n    };\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setEditState('LOADING');\n        try{\n            let data = await fetch(`/api/note/${props.classID}/${props._id}`, {\n                'method': 'PATCH',\n                'mode': 'cors',\n                'headers': {\n                    'content-type': 'application/json'\n                },\n                'body': JSON.stringify(note)\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setEditState('SUCCESS');\n        }catch(err){\n            setEditState('ERROR');\n            console.log(err);\n        }\n    }\n\n    // Handle status message\n\n    let editStatus;\n    if(editState === 'LOADING') editStatus = <div>Loading</div>\n    else if(editState === 'ERROR') editStatus = <div>Please fill in all the required fields!</div>\n    else if(editState === 'SUCCESS') editStatus = <div>Note successfully edited! <Link className=\"modal-redirect\" to={`/redirect?url=class/${props.classID}/${props._id}`} onClick={() => setModalIsOpen(false)}>View edited note</Link></div>\n\n    return (\n        <div>\n            <button className=\"button-main\" onClick={() => setModalIsOpen(true)}>Edit this note</button>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Edit note\n                </div>\n                <div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"title\">*Title: </label>\n                            <input type=\"text\" value={note.title} name=\"title\" id=\"title\" onChange={e => handleInput(e, 'title')}></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"content\">*Content: </label>\n                            <textarea value={note.content} name=\"content\" id=\"content\" onChange={e => handleInput(e, 'content')}></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"resource\">Extra resources: </label>\n                            <textarea value={note.resource} name=\"resource\" id=\"resource\" onChange={e => handleInput(e, 'resource')}></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Side notes: </label>\n                            <textarea value={note.sidenote} name=\"sidenote\" id=\"sidenote\" onChange={e => handleInput(e, 'sidenote')}></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {editStatus}\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default EditNote;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\n\nconst RemoveNote = ({ classID, _id, title, content, resource, sidenote, date }) => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [deletionState, setDeletionState] = useState('');\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setDeletionState('LOADING');\n        try{\n            let data = await fetch(`/api/note/${classID}/${_id}`, {\n                'method': 'DELETE',\n                'mode': 'cors'\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setDeletionState('SUCCESS');\n        }catch(err){\n            setDeletionState('ERROR');\n            console.log(err);\n        }\n    }\n\n    // Handle status message\n\n    let deletionStatus;\n    if(deletionState === 'LOADING') deletionStatus = <div>Loading</div>\n    else if(deletionState === 'ERROR') deletionStatus = <div>Error! Check console for details</div>\n    else if(deletionState === 'SUCCESS') deletionStatus = <div>Note successfully removed! <Link className=\"modal-redirect\" to={`/class/${classID}`} onClick={() => setModalIsOpen(false)}>Go back to class</Link></div>\n\n    return (\n        <div>\n            <button className=\"button-main\" onClick={() => setModalIsOpen(true)}>Remove this note</button>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Are you sure you want to remove the following note?\n                </div>\n                <div className=\"modal-list\">\n                    <ul>\n                        <li>Title: {title}</li>\n                        <li>Content: {content}</li>\n                        <li>Resources: {resource}</li>\n                        <li>Side notes: {sidenote}</li>\n                        <li>Date created: {date && date.split('T')[0]}</li>\n                    </ul>\n                </div>\n                <div>\n                    <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Confirm</button>\n                    <button className=\"button-main\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n                </div>\n                <div className=\"modal-status\">\n                    {deletionStatus}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default RemoveNote;\n","import React, { useState, useEffect } from 'react';\nimport EditNote from '../components/EditNote.js';\nimport RemoveNote from '../components/RemoveNote.js';\n\nconst NoteDetail = ({ match }) => {\n\n    const [note, setNote] = useState({});\n    const [noteFound, setNoteFound] = useState(false);\n\n    useEffect(() => {\n        const fetchNote = async () => {\n            try{\n                let data = await fetch(`/api/note/${match.params.classID}/${match.params.noteID}`);\n                let note = await data.json();\n                if(data.ok) setNoteFound(true)\n                if(!data.ok) throw new Error(note);\n                setNote(note);\n            }catch(err){\n                console.log(err);\n            };\n        };\n        fetchNote();\n    }, [match.params.classID, match.params.noteID]);\n\n    if(!noteFound) return <div className=\"not-found\">Note not found!</div>\n\n    return (\n        <div>\n            <div>\n                <div className=\"page-title\">\n                    Note Details\n                </div>\n                <div className=\"page-info\">\n                    <div className=\"value\">\n                        {note.title}\n                    </div>\n                    <label className=\"key\">Title</label>\n                    <div className=\"value\">\n                        {note.content}\n                    </div>\n                    <label className=\"key\">Content</label>\n                    <div className=\"value\">\n                        {note.resource || 'None'}\n                    </div>\n                    <label className=\"key\">Resources</label>\n                    <div className=\"value\">\n                        {note.sidenote || 'None'}\n                    </div>\n                    <label className=\"key\">Side notes</label>\n                    <div className=\"value\">\n                        {note.date && note.date.split('T')[0]}\n                    </div>\n                    <label className=\"key\">Date added</label>\n                </div>\n            </div>\n            <div>\n                <button className=\"button-main\" onClick={() => document.location.replace(`/class/${match.params.classID}`)}>Go back to class</button>\n                <EditNote classID = {match.params.classID} _id={note._id} title={note.title} content={note.content} resource={note.resource} sidenote={note.sidenote} date={note.date} />\n                <RemoveNote classID = {match.params.classID} _id={note._id} title={note.title} content={note.content} resource={note.resource} sidenote={note.sidenote} date={note.date} />\n            </div>\n        </div>\n    );\n};\n\nexport default NoteDetail;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\n\nModal.setAppElement('#root')\n\nconst AddTodo = () => {\n\n    // Set state variables\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [todo, setTodo] = useState({\n        'subject': '',\n        'duedate': '',\n        'description': '',\n        'sidenote': ''\n    });\n    const [creationState, setCreationState] = useState('');\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setCreationState('LOADING');\n        try{\n            let data = await fetch('/api/todo', {\n                'method': 'POST',\n                'mode': 'cors',\n                'headers': {\n                    'content-type': 'application/json'\n                },\n                'body': JSON.stringify(todo)\n            });\n            let response = await data.json();\n            if(!data.ok) throw new Error(response);\n            setCreationState('SUCCESS');\n        }catch(err){\n            setCreationState('ERROR');\n            console.log(err);\n        }\n    }\n\n    // Handle input changes\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setTodo(prevTodo => {\n            return {...prevTodo, [field]: e.target.value};\n        });\n    };\n\n    // Render status message\n\n    let creationStatus;\n\n    if(creationState === 'LOADING') creationStatus = <div>Loading</div>;\n    else if(creationState === 'SUCCESS') creationStatus = (<div>Todo successfully added! <Link className=\"modal-redirect\" to='/redirect?url=/todo' onClick={() => setModalIsOpen(false)}>View todo list</Link></div>);\n    else if(creationState === 'ERROR') creationStatus = (<div>Please fill in all the required fields!</div>);\n\n    return (\n        <div>\n            <Link to=\"#\" onClick={() => setModalIsOpen(true)}>Add Todo</Link>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div>\n                    <div className=\"close-modal\"><button onClick={() => setModalIsOpen(false)}>X</button></div>\n                    <div className=\"modal-title\">\n                        Add todo\n                    </div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"subject\">*Subject: </label>\n                            <input type=\"text\" value={todo.subject} onChange={e => handleInput(e, 'subject')} name=\"subject\" id=\"subject\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"duedate\">*Due date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={todo.duedate} onChange={e => handleInput(e, 'duedate')} name=\"duedate\" id=\"duedate\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"description\">*Description: </label>\n                            <textarea value={todo.description} onChange={e => handleInput(e, 'description')} name=\"description\" id=\"description\"></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Sidenotes: </label>\n                            <textarea value={todo.sidenote} onChange={e => handleInput(e, 'sidenote')} name=\"sidenote\" id=\"sidenote\"></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {creationStatus}\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\n\nexport default AddTodo;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AddTodo from './AddTodo.js';\n\nconst Nav = () => {\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/class\">Classes</Link>\n            <Link to=\"/todo\">Todos</Link>\n            <AddTodo />\n        </div>\n    );\n};\n\nexport default Nav;\n","import React, { useEffect } from 'react';\n\nconst Redirect = ({ location }) => {\n\n    useEffect(() => {\n        document.location.replace(location.search.split('url=')[1]);\n    }, []);\n\n    return (\n        <div>hi</div>\n    );\n};\n\nexport default Redirect;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home.js';\nimport Todo from './pages/Todo.js';\nimport TodoDetail from './pages/TodoDetail.js';\nimport Class from './pages/Class.js';\nimport ClassDetail from './pages/ClassDetail.js';\nimport NoteDetail from './pages/NoteDetail.js';\nimport Nav from './components/Nav.js';\nimport Redirect from './pages/Redirect.js';\nimport './App.css';\nimport logo from './logo.png';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n          <div className=\"main\">\n          <div className=\"logo\">\n            <img src={logo}></img>\n          </div>\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/todo\" exact component={Todo} />\n              <Route path=\"/todo/:todoID\" exact component={TodoDetail} />\n              <Route path=\"/class\" exact component={Class} />\n              <Route path=\"/class/:classID\" exact component={ClassDetail} />\n              <Route path=\"/class/:classID/:noteID\" exact component={NoteDetail} />\n              <Route path=\"/redirect\" exact component={Redirect} />\n            </Switch>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}