{"version":3,"sources":["logo.png","pages/Home.js","components/TodoElement.js","components/AddTodoMain.js","pages/Todo.js","components/EditTodo.js","components/RemoveTodo.js","components/MarkTodoAsDone.js","pages/TodoDetail.js","components/ClassElement.js","components/CreateClass.js","pages/Class.js","components/NoteElement.js","components/EditClass.js","components/RemoveClass.js","components/AddNote.js","pages/ClassDetail.js","components/EditNote.js","components/RemoveNote.js","pages/NoteDetail.js","components/AddTodo.js","components/Nav.js","pages/Redirect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","TodoElement","_id","subject","duedate","description","sidenote","is_done","onClick","window","location","replace","length","substring","Date","toISOString","split","Modal","setAppElement","AddTodoMain","statusMessage","cookies","Cookies","readOnly","useContext","ReadOnlyContext","useState","modalIsOpen","setModalIsOpen","todo","setTodo","creationState","setCreationState","handleSubmit","e","a","preventDefault","fetch","get","JSON","stringify","data","json","response","status","prevTodo","handleInput","field","persist","target","value","to","xmlns","width","height","viewBox","d","isOpen","overlayClassName","portalClassName","parentSelector","document","querySelector","htmlFor","type","onChange","name","id","min","Todo","todos","setTodos","completedTodos","setCompletedTodos","loading","setLoading","sortBy","setSortBy","useEffect","ok","Error","sort","todoA","todoB","filter","console","log","fetchData","handleChange","defaultValue","map","key","EditTodo","props","editState","setEditState","handleEdit","RemoveTodo","deletionStatus","deletionState","setDeletionState","handleConfirm","UpdateTodoStatus","updateState","setUpdateState","TodoDetail","match","todoFound","setTodoFound","params","todoID","ClassElement","prof","start_date","end_date","notes","CreateClass","_class","setClass","prevClass","Class","classes","setClasses","classA","classB","fetchClasses","NoteElement","classID","title","content","resource","date","EditClass","RemoveClass","AddNote","submissionState","setSubmissionState","note","setNote","style","scrollHeight","prevNote","ClassDetail","classFound","setClassFound","noteA","noteB","fetchClass","undefined","EditNote","RemoveNote","NoteDetail","noteFound","setNoteFound","noteID","fetchNote","AddTodo","Nav","setReadOnly","accessCode","setAccessCode","codeStatus","setCodeStatus","code","set","path","remove","margin","Redirect","search","React","createContext","App","checkPerm","src","logo","Provider","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5a944c3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a6a3d60b.png\";","import React from 'react';\n\nconst Home = () => {\n\n    return (\n        <div className=\"page-title\">\n            Home\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TodoElement = ({ _id, subject, duedate, description, sidenote, is_done }) => {\n    return (\n        <div className=\"flex-item\" onClick={() => window.location.replace(`/todo/${_id}`)}>\n            <div className=\"flex-inner-title\">\n                {subject.length > 20 ? `${subject.substring(0,20)}...` : subject}\n            </div>\n            <div className=\"flex-inner-text\">\n                <div><strong>Due date: </strong>{duedate}</div>\n                <div><strong>Description: </strong>{description.length > 20 ? `${description.substring(0, 20)}...` : description} </div>\n                <div><strong>Side notes: </strong>{sidenote ? (sidenote.length > 20 ? `${sidenote.substring(0,20)}...` : sidenote) : 'None'} </div>\n                <div>\n                    {(duedate < new Date().toISOString().split(\"T\")[0] && !is_done) && 'The due date of this todo has passed!'}\n                </div>\n                <div>Click to view details!</div>\n            </div>\n        </div>\n    );\n};\n\nexport default TodoElement;\n","import React, { useState, useContext } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nModal.setAppElement('#root')\n\nconst AddTodoMain = () => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [todo, setTodo] = useState({\n        'subject': '',\n        'duedate': '',\n        'description': '',\n        'sidenote': ''\n    });\n    const [creationState, setCreationState] = useState('');\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setCreationState('LOADING');\n        let data = await fetch(`/api/todo?key=${cookies.get('code')}`, {\n            'method': 'POST',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify(todo)\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setCreationState('SUCCESS');\n            setTodo(prevTodo => ({...prevTodo, _id: response._id}));\n        }else if(data.status === 400){\n            setCreationState('ERROR_400');\n        }else if(data.status === 403){\n            setCreationState('ERROR_403');\n        };\n    };\n\n    // Handle input changes\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setTodo(prevTodo => {\n            return {...prevTodo, [field]: e.target.value};\n        });\n    };\n\n    // Render status message\n\n    let statusMessage;\n    switch(creationState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully added todo! <Link to={`/todo/${todo._id}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>View created todo</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Please fill in all the required fields!</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <>\n            <div className=\"flex-item\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>\n                <div className=\"flex-inner-title\">\n                    Add a todo\n                </div>\n                <div className=\"add-todo\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n                </div>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div>\n                    <div className=\"close-modal\"><button onClick={() => setModalIsOpen(false)}>X</button></div>\n                    <div className=\"modal-title\">\n                        Add todo\n                    </div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"subject\">*Subject: </label>\n                            <input type=\"text\" value={todo.subject} onChange={e => handleInput(e, 'subject')} name=\"subject\" id=\"subject\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"duedate\">*Due date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={todo.duedate} onChange={e => handleInput(e, 'duedate')} name=\"duedate\" id=\"duedate\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"description\">*Description: </label>\n                            <textarea value={todo.description} onChange={e => handleInput(e, 'description')} name=\"description\" id=\"description\"></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Sidenotes: </label>\n                            <textarea value={todo.sidenote} onChange={e => handleInput(e, 'sidenote')} name=\"sidenote\" id=\"sidenote\"></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {statusMessage}\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\n\nexport default AddTodoMain;\n","import React, { useState, useEffect } from 'react';\nimport TodoElement from '../components/TodoElement.js';\nimport AddTodoMain from '../components/AddTodoMain.js'\n\nconst Todo = () => {\n\n    // Set state variables\n\n    const [todos, setTodos] = useState([]);\n    const [completedTodos, setCompletedTodos] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [sortBy, setSortBy] = useState('DATE_ASCENDING');\n\n    // Fetch todo on sort changes\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try{\n                const data = await fetch('/api/todo');\n                const todos = await data.json();\n                setLoading(false);\n                if(!data.ok) throw new Error(todos);\n                switch(sortBy){\n                    case 'DATE_ASCENDING':\n                        todos.sort((todoA, todoB) => {\n                            if(todoA.duedate > todoB.duedate) return 1;\n                            if(todoA.duedate < todoB.duedate) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'DATE_DESCENDING':\n                        todos.sort((todoA, todoB) => {\n                            if(todoA.duedate < todoB.duedate) return 1;\n                            if(todoA.duedate > todoB.duedate) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'SUBJECT':\n                        todos.sort((todoA, todoB) => {\n                            if(todoA.subject > todoB.subject) return 1;\n                            if(todoA.subject < todoB.subject) return -1;\n                            return 0;\n                        });\n                        break;\n                };\n                setTodos(todos.filter(todo => !todo.is_done));\n                setCompletedTodos(todos.filter(todo => todo.is_done));\n            }catch(err){\n                console.log(err);\n            };\n        };\n        fetchData();\n    }, [sortBy]);\n\n    // Handle change in sort method\n\n    const handleChange = e => {\n        e.persist();\n        setSortBy(e.target.value);\n    }\n\n    return (\n        <div>\n            <div className=\"page-title\">Todos</div>\n            <div className=\"custom-select\">\n                <select onChange={e => handleChange(e)} defaultValue=\"DATE_ASCENDING\">\n                    <option value=\"DATE_ASCENDING\">Date ascending</option>\n                    <option value=\"DATE_DESCENDING\">Date descending</option>\n                    <option value=\"SUBJECT\">Subject</option>\n                </select>\n                <span className=\"custom-arrow\"></span>\n            </div>\n            <div>\n                <div className=\"page-subtitle\">Current todos</div>\n                    <div className=\"flex-container\">\n                        <AddTodoMain />\n                        {loading && (\n                            <div className=\"flex-item\">\n                                <div className=\"flex-inner-title\">\n                                  Loading...\n                                </div>\n                            </div>)}\n                        {todos.map(todo => (<TodoElement key={todo._id} _id={todo._id} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} is_done={false}/>))}\n                    </div>\n            </div>\n            <div>\n                <div className=\"page-subtitle\">Completed todos</div>\n                {!(completedTodos.length === 0) ? (\n                    <div className=\"flex-container\">\n                        {completedTodos.map(todo => (\n                            <TodoElement key={todo._id} _id={todo._id} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} is_done={true}/>\n                        ))}\n                    </div>\n                ) : (\n                    <div className=\"not-found\">\n                        There are currently no completed todos!\n                    </div>\n            )}\n            </div>\n        </div>\n    );\n};\n\nexport default Todo;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst EditTodo = (props) => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [editState, setEditState] = useState('');\n    const [todo, setTodo] = useState(props);\n\n    useEffect(() => {\n        setTodo(props);\n    }, [props])\n\n    // Handle form input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setTodo(prevTodo => {\n            return {...prevTodo, [field]: e.target.value};\n        });\n    };\n\n    // Handle form submission\n\n    const handleEdit = async e => {\n        e.preventDefault();\n        setEditState('LOADING');\n        let data = await fetch(`/api/todo/${props._id}?key=${cookies.get('code')}`, {\n            'method': 'PATCH',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify(todo)\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setEditState('SUCCESS');\n        }else if(data.status === 400){\n            setEditState('ERROR_400');\n        }else if(data.status === 403){\n            setEditState('ERROR_403');\n        };\n    };\n\n    // Handle status message\n\n    let statusMessage;\n    switch(editState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully edited todo! <Link to={`/redirect?url=/todo/${props._id}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>View updated todo</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Please fill in all the required fields!</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <div>\n            <div>\n                <button className=\"button-main\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>Edit Todo</button>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Edit todo\n                </div>\n                <form className=\"modal-form\">\n                    <div>\n                            <label htmlFor=\"subject\">*Subject: </label>\n                            <input type=\"text\" value={todo.subject} onChange={e => handleInput(e, 'subject')} name=\"subject\" id=\"subject\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"duedate\">*Due date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={todo.duedate} onChange={e => handleInput(e, 'duedate')} name=\"duedate\" id=\"duedate\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"description\">*Description: </label>\n                            <textarea value={todo.description} onChange={e => handleInput(e, 'description')} name=\"description\" id=\"description\"></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Sidenotes: </label>\n                            <textarea value={todo.sidenote} onChange={e => handleInput(e, 'sidenote')} name=\"sidenote\" id=\"sidenote\"></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleEdit(e)}>Confirm edit</button>\n                        <div className=\"modal-status\">\n                            {statusMessage}\n                        </div>\n                </form>\n            </Modal>\n        </div>\n    );\n};\n\nexport default EditTodo;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst RemoveTodo = ({ _id, subject, duedate, description, sidenote }) => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [deletionState, setDeletionState] = useState('');\n\n    // Handle form submission\n\n    const handleConfirm = async e => {\n        e.preventDefault();\n        setDeletionState('LOADING');\n        let data = await fetch(`/api/todo/${_id}?key=${cookies.get('code')}`, {\n            'method': 'DELETE',\n            'mode': 'cors'\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setDeletionState('SUCCESS');\n        }else if(data.status === 400){\n            setDeletionState('ERROR_400');\n        }else if(data.status === 403){\n            setDeletionState('ERROR_403');\n        };\n    };\n\n    // Handle status message\n\n    let deletionStatus;\n    switch(deletionState){\n        case 'LOADING':\n            deletionStatus = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            deletionStatus = <div>Successfully removed todo! <Link to=\"/todo\" className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>Go back to todos list</Link></div>;\n            break;\n        case 'ERROR_400':\n            deletionStatus = <div>Unknown error! Check console for details</div>;\n            break;\n        case 'ERROR_403':\n            deletionStatus = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n\n    return (\n        <div>\n            <div>\n                <button className=\"button-main\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>Remove Todo</button>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Are you sure you want to remove the following todo?\n                </div>\n                <div className=\"modal-list\">\n                    <ul>\n                        <li>Subject: {subject}</li>\n                        <li>Due date: {duedate}</li>\n                        <li>Description: {description}</li>\n                        <li>Side notes: {sidenote || 'None'}</li>\n                    </ul>\n                </div>\n                <div>\n                    <button className=\"button-main\" onClick={e => handleConfirm(e)}>Confirm</button>\n                    <button className=\"button-main\" type=\"submit\" onClick={() => {setModalIsOpen(false);}}>Cancel</button>\n                </div>\n                <div className=\"modal-status\">\n                    {deletionStatus}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default RemoveTodo;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst UpdateTodoStatus = ({ _id, subject, duedate, description, sidenote, is_done }) => {\n\n    const cookies = new Cookies();\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [updateState, setUpdateState] = useState('');\n\n    const handleConfirm = async e => {\n        e.preventDefault();\n        setUpdateState('LOADING');\n        let data = await fetch(`/api/todo/${_id}?key=${cookies.get('code')}`, {\n            'method': 'PATCH',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify({\n                'subject': subject,\n                'duedate': duedate,\n                'description': description,\n                'sidenote': sidenote,\n                'is_done': !is_done\n            })\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setUpdateState('SUCCESS');\n        }else if(data.status === 400){\n            setUpdateState('ERROR_400');\n        }else if(data.status === 403){\n            setUpdateState('ERROR_403');\n        };\n    };\n\n    let statusMessage;\n    switch(updateState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Marked todo as {is_done ? 'ongoing' : 'done'}! <Link to={`/redirect?url=/todo/${_id}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>View updated todo</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Unknown error! Check console for details</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <div>\n            <div>\n                <button className=\"button-main\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>Mark todo as {is_done ? 'ongoing' : 'complete'}</button>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Are you sure you want to mark the following todo as {is_done ? 'ongoing' : 'complete'}?\n                </div>\n                <div className=\"modal-list\">\n                    <ul>\n                        <li>Subject: {subject}</li>\n                        <li>Due date: {duedate}</li>\n                        <li>Description: {description}</li>\n                        <li>Side notes: {sidenote || 'None'}</li>\n                    </ul>\n                </div>\n                <div>\n                    <button className=\"button-main\" onClick={e => handleConfirm(e)}>Confirm</button>\n                    <button className=\"button-main\" type=\"submit\" onClick={() => {setModalIsOpen(false);}}>Cancel</button>\n                </div>\n                <div className=\"modal-status\">\n                    {statusMessage}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default UpdateTodoStatus;\n","import React, { useState, useEffect } from 'react';\nimport EditTodo from '../components/EditTodo.js';\nimport RemoveTodo from '../components/RemoveTodo.js';\nimport UpdateTodoStatus from '../components/MarkTodoAsDone.js';\n\nconst TodoDetail = ({ match }) => {\n\n    const [todo, setTodo] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [todoFound, setTodoFound] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try{\n                const data = await fetch(`/api/todo/${match.params.todoID}`);\n                const todo = await data.json();\n                setLoading(false);\n                if(data.ok) setTodoFound(true);\n                if(!data.ok) throw new Error(todo);\n                setTodo(todo);\n            }catch(err){\n                console.log(err);\n            }\n        }\n        fetchData();\n    }, []);\n\n    if(loading) return <div className=\"page-title\">Loading...</div>\n    if(!todoFound) return <div className=\"not-found\">Todo not found!</div>\n\n    return (\n        <div>\n            <div className=\"page-title\">Todo Details</div>\n            <div className=\"page-info\">\n                <div className=\"value\">\n                    {todo.subject}\n                </div>\n                <label className=\"key\">Subject</label>\n                <div className=\"value\">\n                    {todo.duedate}\n                </div>\n                <label className=\"key\">Due date</label>\n                <div className=\"value\">\n                    {todo.description}\n                </div>\n                <label className=\"key\">Description</label>\n                <div className=\"value\">\n                    {todo.sidenote || 'None'}\n                </div>\n                <label className=\"key\">Side notes</label>\n                <div className=\"value\">\n                    {todo.is_done ? 'Completed' : 'Ongoing'}\n                </div>\n                <label className=\"key\">Status</label>\n            </div>\n            <div>\n                <EditTodo _id={todo._id} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} />\n                <UpdateTodoStatus _id={todo._id} is_done={todo.is_done} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} />\n                <RemoveTodo _id={todo._id} subject={todo.subject} duedate={todo.duedate} description={todo.description} sidenote={todo.sidenote} />\n            </div>\n        </div>\n    );\n};\n\nexport default TodoDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ClassElement = ({ _id, name, prof, start_date, end_date, notes }) => {\n    return (\n        <div className=\"flex-item\" onClick={() => window.location.replace(`/class/${_id}`)}>\n            <div className=\"flex-inner-title\">{name.length > 16 ? `${name.substring(0,16)}...` : name}</div>\n            <div className=\"flex-inner-text\">\n                <div><strong>Professor: </strong>{prof ? (prof.length > 20 ? `${prof.substring(0,20)}...` : prof) : 'N/A'}</div>\n                <div><strong>Start date: </strong>{start_date}</div>\n                <div><strong>End date: </strong>{end_date}</div>\n                <div><strong>Number of notes: </strong>{notes.length}</div>\n                <div>\n                    Click to view details!\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ClassElement;\n","import React, { useState, useContext } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst CreateClass = () => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [_class, setClass] = useState({\n        'name': '',\n        'prof': '',\n        'start_date': '',\n        'end_date': ''\n    });\n    const [creationState, setCreationState] = useState('');\n\n    // Handle form input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setClass(prevClass => {\n            return {...prevClass, [field]: e.target.value};\n        });\n    };\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setCreationState('LOADING');\n        let data = await fetch(`/api/class?key=${cookies.get('code')}`, {\n            'method': 'POST',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify(_class)\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setCreationState('SUCCESS');\n            setClass(prevClass => ({...prevClass, _id: response._id}));\n        }else if(data.status === 400){\n            setCreationState('ERROR_400');\n        }else if(data.status === 403){\n            setCreationState('ERROR_403');\n        };\n    };\n\n    // Render status message\n\n    let statusMessage;\n    switch(creationState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully created class! <Link to={`/class/${_class._id}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>View created class</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Unknown error! Check console for details</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <>\n            <div className=\"flex-item\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>\n                <div className=\"flex-inner-title\">\n                    Create a new class\n                </div>\n                <div className=\"add-class\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n                </div>\n            </div>\n            <div>\n                <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                    <div className=\"close-modal\"><button className=\"close-modal\" onClick={() => setModalIsOpen(false)}>X</button></div>\n                    <div className=\"modal-title\">\n                        Create class\n                    </div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"name\">*Name: </label>\n                            <input type=\"text\" value={_class.subject} onChange={e => handleInput(e, 'name')} name=\"name\" id=\"name\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"prof\">Professor: </label>\n                            <input type=\"text\" value={_class.duedate} onChange={e => handleInput(e, 'prof')} name=\"prof\" id=\"prof\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"start_date\">*Start date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={_class.description} onChange={e => handleInput(e, 'start_date')} name=\"start_date\" id=\"start_date\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"end_date\">*End date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={_class.sidenote} onChange={e => handleInput(e, 'end_date')} name=\"end_date\" id=\"end_date\"></input>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {statusMessage}\n                    </div>\n                </Modal>\n            </div>\n        </>\n    );\n};\n\nexport default CreateClass;\n","import React, { useState, useEffect } from 'react';\nimport ClassElement from '../components/ClassElement.js';\nimport CreateClass from '../components/CreateClass.js';\nimport Cookies from 'universal-cookie';\n\nconst Class = () => {\n\n    const cookies = new Cookies();\n\n    const [classes, setClasses] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [sortBy, setSortBy] = useState('START_DATE_ASCENDING');\n\n    // Fetch classes\n\n    useEffect(() => {\n        const fetchClasses = async () => {\n            try{\n                let data = await fetch(`/api/class?key=${cookies.get('code')}`);\n                let classes = await data.json();\n                setLoading(false);\n                if(!data.ok) throw new Error(classes);\n                switch(sortBy){\n                    case 'START_DATE_ASCENDING':\n                        classes.sort((classA, classB) => {\n                            if(classA.start_date > classB.start_date) return  1;\n                            if(classA.start_date < classB.start_date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'START_DATE_DESCENDING':\n                        classes.sort((classA, classB) => {\n                            if(classA.start_date < classB.start_date) return  1;\n                            if(classA.start_date > classB.start_date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'END_DATE_ASCENDING':\n                        classes.sort((classA, classB) => {\n                            if(classA.end_date > classB.end_date) return  1;\n                            if(classA.end_date < classB.end_date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'END_DATE_DESCENDING':\n                        classes.sort((classA, classB) => {\n                            if(classA.end_date < classB.end_date) return  1;\n                            if(classA.end_date > classB.end_date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'NAME':\n                        classes.sort((classA, classB) => {\n                            if(classA.name > classB.name) return  1;\n                            if(classA.name < classB.name) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'NOTES':\n                        classes.sort((classA, classB) => {\n                            if(classA.notes.length < classB.notes.length) return 1;\n                            if(classA.notes.length > classB.notes.length) return -1;\n                            return 0;\n                        });\n                        break;\n                }\n                setClasses(classes);\n            }catch(err){\n                console.log(err);\n            };\n        }\n        fetchClasses();\n    }, [sortBy])\n\n    // Handle change on sort method\n\n    const handleChange = e => {\n        e.persist();\n        setSortBy(e.target.value);\n    }\n\n    return (\n        <div>\n            <div className=\"page-title\">\n                Classes\n            </div>\n            <div className=\"custom-select\">\n                <select defaultValue=\"START_DATE_ASCENDING\" onChange={e => handleChange(e)}>\n                    <option value=\"START_DATE_ASCENDING\">Start date ascending</option>\n                    <option value=\"START_DATE_DESCENDING\">Start date descending</option>\n                    <option value=\"END_DATE_ASCENDING\">End date ascending</option>\n                    <option value=\"END_DATE_DESCENDING\">End date descending</option>\n                    <option value=\"NAME\">Name</option>\n                    <option value=\"NOTES\">Number of notes</option>\n                </select>\n                <span className=\"custom-arrow\"></span>\n            </div>\n            <div className=\"flex-container\">\n                <CreateClass />\n                {loading && (<div className=\"flex-item\">\n                    <div className=\"flex-inner-title\">\n                        Loading...\n                    </div>\n                </div>)}\n                {classes.map(_class => (<ClassElement key={_class._id} _id={_class._id} name={_class.name} prof={_class.prof} start_date={_class.start_date} end_date={_class.end_date} notes={_class.notes} />))}\n            </div>\n        </div>\n    );\n};\n\nexport default Class;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NoteElement = ({ _id, classID, title, content, resource, sidenote, date }) => {\n    return (\n        <div className=\"flex-item\" onClick={() => window.location.replace(`/class/${classID}/${_id}`)}>\n            <div className=\"flex-inner-title\">\n                {title.length > 20 ? `${title.substring(0,20)}...` : title}\n            </div>\n            <div className=\"flex-inner-text\">\n                <div><strong>Content: </strong>{content.length > 20 ? `${content.substring(0,20)}...` : content}</div>\n                <div><strong>Extra resources: </strong>{resource ? (resource.length > 17 ? `${resource.substring(0,17)}...` : resource) : 'None'}</div>\n                <div><strong>Side notes: </strong>{sidenote ? (sidenote.length > 20 ? `${sidenote.substring(0,20)}...` : sidenote) : 'None'}</div>\n                <div><strong>Date added: {date.split('T')[0]}</strong></div>\n                <div>Click to view details!</div>\n            </div>\n        </div>\n    );\n};\n\nexport default NoteElement;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst EditClass = (props) => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [editState, setEditState] = useState('');\n    const [_class, setClass] = useState(props);\n\n    useEffect(() => {\n        setClass(props)\n    }, [props]);\n\n    // Handle form input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setClass(prevClass => {\n            return {...prevClass, [field]: e.target.value};\n        });\n    };\n\n    // Handle form submission\n\n    const handleEdit = async e => {\n        e.preventDefault();\n        setEditState('LOADING');\n        let data = await fetch(`/api/class/${props._id}?key=${cookies.get('code')}`, {\n            'method': 'PATCH',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify(_class)\n        });\n        let response = await data.json();\n        console.log(response);\n        if(data.status === 200){\n            setEditState('SUCCESS');\n        }else if(data.status === 400){\n            setEditState('ERROR_400');\n        }else if(data.status === 403){\n            setEditState('ERROR_403');\n        };\n    };\n\n    let statusMessage;\n    switch(editState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully edited class! <Link to={`/redirect?url=/class/${props._id}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>View updated class</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Unknown error! Check console for details</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <div>\n            <button className=\"button-main\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>Edit this class</button>\n            <div>\n                <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                    <div className=\"close-modal\">\n                        <button onClick={() => setModalIsOpen(false)}>X</button>\n                    </div>\n                    <div className=\"modal-title\">\n                        Edit class\n                    </div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"name\">*Name: </label>\n                            <input type=\"text\" value={_class.name} onChange={e => handleInput(e, 'name')} name=\"name\" id=\"name\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"prof\">Professor: </label>\n                            <input type=\"text\" value={_class.prof} onChange={e => handleInput(e, 'prof')} name=\"prof\" id=\"prof\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"start_date\">*Start date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={_class.start_date} onChange={e => handleInput(e, 'start_date')} name=\"start_date\" id=\"start_date\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"end_date\">*End date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={_class.end_date} onChange={e => handleInput(e, 'end_date')} name=\"end_date\" id=\"end_date\"></input>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleEdit(e)}>Confirm edit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {statusMessage}\n                    </div>\n                </Modal>\n            </div>\n        </div>\n    );\n};\n\nexport default EditClass;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst RemoveClass = ({ _id, name, prof, start_date, end_date }) => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [deletionState, setDeletionState] = useState('');\n\n    // Handle form submission\n\n    const handleConfirm = async e => {\n        e.preventDefault();\n        setDeletionState('LOADING');\n        let data = await fetch(`/api/class/${_id}?key=${cookies.get('code')}`, {\n            'method': 'DELETE',\n            'mode': 'cors'\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setDeletionState('SUCCESS');\n        }else if(data.status === 400){\n            setDeletionState('ERROR_400');\n        }else if(data.status === 403){\n            setDeletionState('ERROR_403');\n        };\n    };\n\n    let statusMessage;\n    switch(deletionState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully removed class! <Link to=\"/class\" className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>Go back to class list</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Unknown error! Check console for details</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n\n    return (\n        <div>\n            <div>\n                <button className=\"button-main\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>Remove this class</button>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Are you sure you want to remove the following class?\n                </div>\n                <div className=\"modal-list\">\n                    <ul>\n                        <li>Name: {name}</li>\n                        <li>Professor: {prof || 'N/A'}</li>\n                        <li>Start date: {start_date}</li>\n                        <li>End date: {end_date}</li>\n                    </ul>\n                </div>\n                <div>\n                    <button className=\"button-main\" onClick={e => handleConfirm(e)}>Confirm</button>\n                    <button className=\"button-main\" type=\"submit\" onClick={() => {setModalIsOpen(false);}}>Cancel</button>\n                </div>\n                <div className=\"modal-status\">\n                    {statusMessage}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default RemoveClass;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst AddNote = ({ _id }) => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [submissionState, setSubmissionState] = useState('');\n    const [note, setNote] = useState({\n        'title': '',\n        'content': '',\n        'resource': '',\n        'sidenote': '',\n    });\n\n    // Handle form input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        e.target.style.height = \"\";\n        e.target.style.height = e.target.scrollHeight + \"px\";\n        setNote(prevNote => ({...prevNote, [field]: e.target.value}))\n    }\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setSubmissionState('LOADING')\n        let data = await fetch(`/api/note/${_id}?key=${cookies.get('code')}`, {\n            'method': 'POST',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify(note)\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setSubmissionState('SUCCESS');\n            setNote(prevNote => ({...prevNote, _id: response._id}));\n        }else if(data.status === 400){\n            setSubmissionState('ERROR_400');\n        }else if(data.status === 403){\n            setSubmissionState('ERROR_403');\n        };\n    };\n\n    // Handle status message\n\n    let statusMessage;\n    switch(submissionState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully added note! <Link to={`/class/${_id}/${note._id}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>View created note</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Please fill in all the required fields!</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <>\n            <div className=\"flex-item\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>\n                <div className=\"flex-inner-title\">Add a new note</div>\n                <div className=\"add-note\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n                </div>\n            </div>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Add note\n                </div>\n                <div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"title\">*Title: </label>\n                            <input type=\"text\" value={note.title} name=\"title\" id=\"title\" onChange={e => handleInput(e, 'title')}></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"content\">*Content: </label>\n                            <textarea value={note.content} name=\"content\" id=\"content\" onChange={e => handleInput(e, 'content')}></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"resource\">Extra resources: </label>\n                            <textarea value={note.resource} name=\"resource\" id=\"resource\" onChange={e => handleInput(e, 'resource')}></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Side notes: </label>\n                            <textarea value={note.sidenote} name=\"sidenote\" id=\"sidenote\" onChange={e => handleInput(e, 'sidenote')}></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                        <div>\n                            {statusMessage}\n                        </div>\n                    </form>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default AddNote;\n","import React, { useState, useEffect } from 'react';\nimport NoteElement from '../components/NoteElement.js';\nimport EditClass from '../components/EditClass.js';\nimport RemoveClass from '../components/RemoveClass.js';\nimport AddNote from '../components/AddNote.js';\n\nconst ClassDetail = ({ match }) => {\n\n    // Set state variable\n\n    const [_class, setClass] = useState({});\n    const [classFound, setClassFound] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [sortBy, setSortBy] = useState('DATE_ASCENDING');\n\n    // Fetch class from DB\n\n    useEffect(() => {\n        const fetchClass = async () => {\n            try{\n                let data = await fetch(`/api/class/${match.params.classID}`);\n                let _class = await data.json();\n                setLoading(false);\n                if(data.ok) setClassFound(true);\n                if(!data.ok) throw new Error(_class);\n                switch(sortBy){\n                    case 'DATE_ASCENDING':\n                        _class.notes.sort((noteA, noteB) => {\n                            if(noteA.date > noteB.date) return 1;\n                            if(noteA.date < noteB.date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'DATE_DESCENDING':\n                        _class.notes.sort((noteA, noteB) => {\n                            if(noteA.date < noteB.date) return 1;\n                            if(noteA.date > noteB.date) return -1;\n                            return 0;\n                        });\n                        break;\n                    case 'NOTE_LENGTH':\n                        _class.notes.sort((noteA, noteB) => {\n                            if(noteA.content.length < noteB.content.length) return 1;\n                            if(noteA.content.length > noteB.content.length) return -1;\n                            return 0;\n                        });\n                        break;\n                };\n                setClass(_class);\n            }catch(err){\n                console.log(err);\n            }\n        };\n        fetchClass();\n    }, [sortBy]);\n\n    // Handle sort method change\n\n    const handleChange = e => {\n        e.persist();\n        setSortBy(e.target.value);\n    }\n\n    if(loading) return <div className=\"page-title\">Loading...</div>\n    if(!classFound) return <div className=\"not-found\">Class not found!</div>\n\n    return (\n        <div>\n            <div className=\"page-title\">\n                Class Details\n            </div>\n            <div className=\"page-info\">\n                <div className=\"value\">\n                    {_class.name}\n                </div>\n                <label className=\"key\">Name</label>\n                <div className=\"value\">\n                    {_class.prof || 'N/A'}\n                </div>\n                <label className=\"key\">Professor</label>\n                <div className=\"value\">\n                    {_class.start_date}\n                </div>\n                <label className=\"key\">Start date</label>\n                <div className=\"value\">\n                    {_class.end_date}\n                </div>\n                <label className=\"key\">End date</label>\n            </div>\n            <div className=\"page-subtitle\">\n                Notes for this class\n            </div>\n            <div className=\"custom-select\">\n                <select defaultValue=\"DATE_ASCENDING\" onChange={e => handleChange(e)}>\n                    <option value=\"DATE_ASCENDING\">Date ascending</option>\n                    <option value=\"DATE_DESCENDING\">Date descending</option>\n                    <option value=\"NOTE_LENGTH\">Note length</option>\n                </select>\n                <span className=\"custom-arrow\"></span>\n            </div>\n            <div className=\"flex-container\">\n                <AddNote _id={_class._id} />\n                {!(_class.notes === undefined || _class.notes.length === 0) && _class.notes.map(note => (<NoteElement key={note._id} classID={match.params.classID} _id={note._id} title={note.title} content={note.content} resource={note.resource} sidenote={note.sidenote} date={note.date} />))}\n            </div>\n            <div>\n                <EditClass _id={_class._id} name={_class.name} prof={_class.prof} start_date={_class.start_date} end_date={_class.end_date} />\n                <RemoveClass _id={_class._id} name={_class.name} prof={_class.prof} start_date={_class.start_date} end_date={_class.end_date} />\n            </div>\n        </div>\n    );\n};\n\nexport default ClassDetail;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst EditNote = (props) => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [note, setNote] = useState(props);\n    const [editState, setEditState] = useState('');\n\n    useEffect(() => {\n        setNote(props)\n    }, [props]);\n\n    // Handle input change\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setNote(prevNote => ({...prevNote, [field]: e.target.value}));\n    };\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setEditState('LOADING');\n        let data = await fetch(`/api/note/${props.classID}/${props._id}?key=${cookies.get('code')}`, {\n            'method': 'PATCH',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify(note)\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setEditState('SUCCESS');\n        }else if(data.status === 400){\n            setEditState('ERROR_400');\n        }else if(data.status === 403){\n            setEditState('ERROR_403');\n        };\n    };\n\n    // Handle status message\n\n    let statusMessage;\n    switch(editState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully edited note! <Link to={`/redirect?url=/class/${props.classID}/${props._id}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>View updated note</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Please fill in all the required fields!</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <div>\n            <button className=\"button-main\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>Edit this note</button>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Edit note\n                </div>\n                <div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"title\">*Title: </label>\n                            <input type=\"text\" value={note.title} name=\"title\" id=\"title\" onChange={e => handleInput(e, 'title')}></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"content\">*Content: </label>\n                            <textarea value={note.content} name=\"content\" id=\"content\" onChange={e => handleInput(e, 'content')}></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"resource\">Extra resources: </label>\n                            <textarea value={note.resource} name=\"resource\" id=\"resource\" onChange={e => handleInput(e, 'resource')}></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Side notes: </label>\n                            <textarea value={note.sidenote} name=\"sidenote\" id=\"sidenote\" onChange={e => handleInput(e, 'sidenote')}></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {statusMessage}\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default EditNote;\n","import React, { useState, useContext } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nconst RemoveNote = ({ classID, _id, title, content, resource, sidenote, date }) => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [deletionState, setDeletionState] = useState('');\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setDeletionState('LOADING');\n        let data = await fetch(`/api/note/${classID}/${_id}?key=${cookies.get('code')}`, {\n            'method': 'DELETE',\n            'mode': 'cors'\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setDeletionState('SUCCESS');\n        }else if(data.status === 400){\n            setDeletionState('ERROR_400');\n        }else if(data.status === 403){\n            setDeletionState('ERROR_403');\n        };\n    };\n\n    // Handle status message\n\n    let statusMessage;\n    switch(deletionState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully removed note! <Link to={`/class/${classID}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>Go back to class</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Unknown error! Check console for details</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <div>\n            <button className=\"button-main\" onClick={() => {if(!readOnly) setModalIsOpen(true)}}>Remove this note</button>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"close-modal\">\n                    <button onClick={() => setModalIsOpen(false)}>X</button>\n                </div>\n                <div className=\"modal-title\">\n                    Are you sure you want to remove the following note?\n                </div>\n                <div className=\"modal-list\">\n                    <ul>\n                        <li>Title: {title}</li>\n                        <li>Content: {content}</li>\n                        <li>Resources: {resource}</li>\n                        <li>Side notes: {sidenote}</li>\n                        <li>Date created: {date && date.split('T')[0]}</li>\n                    </ul>\n                </div>\n                <div>\n                    <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Confirm</button>\n                    <button className=\"button-main\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n                </div>\n                <div className=\"modal-status\">\n                    {statusMessage}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default RemoveNote;\n","import React, { useState, useEffect } from 'react';\nimport EditNote from '../components/EditNote.js';\nimport RemoveNote from '../components/RemoveNote.js';\n\nconst NoteDetail = ({ match }) => {\n\n    const [note, setNote] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [noteFound, setNoteFound] = useState(false);\n\n    useEffect(() => {\n        const fetchNote = async () => {\n            try{\n                let data = await fetch(`/api/note/${match.params.classID}/${match.params.noteID}`);\n                let note = await data.json();\n                setLoading(false);\n                if(data.ok) setNoteFound(true)\n                if(!data.ok) throw new Error(note);\n                setNote(note);\n            }catch(err){\n                console.log(err);\n            };\n        };\n        fetchNote();\n    }, [match.params.classID, match.params.noteID]);\n\n    if(loading) return <div className=\"page-title\">Loading...</div>\n    if(!noteFound) return <div className=\"not-found\">Note not found!</div>\n\n    return (\n        <div>\n            <div>\n                <div className=\"page-title\">\n                    Note Details\n                </div>\n                <div className=\"page-info\">\n                    <div className=\"value\">\n                        {note.title}\n                    </div>\n                    <label className=\"key\">Title</label>\n                    <div className=\"value\">\n                        {note.content}\n                    </div>\n                    <label className=\"key\">Content</label>\n                    <div className=\"value\">\n                        {note.resource || 'None'}\n                    </div>\n                    <label className=\"key\">Resources</label>\n                    <div className=\"value\">\n                        {note.sidenote || 'None'}\n                    </div>\n                    <label className=\"key\">Side notes</label>\n                    <div className=\"value\">\n                        {note.date && note.date.split('T')[0]}\n                    </div>\n                    <label className=\"key\">Date added</label>\n                </div>\n            </div>\n            <div>\n                <button className=\"button-main\" onClick={() => document.location.replace(`/class/${match.params.classID}`)}>Go back to class</button>\n                <EditNote classID = {match.params.classID} _id={note._id} title={note.title} content={note.content} resource={note.resource} sidenote={note.sidenote} date={note.date} />\n                <RemoveNote classID = {match.params.classID} _id={note._id} title={note.title} content={note.content} resource={note.resource} sidenote={note.sidenote} date={note.date} />\n            </div>\n        </div>\n    );\n};\n\nexport default NoteDetail;\n","import React, { useState, useContext } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport { ReadOnlyContext } from '../App.js';\nimport Cookies from 'universal-cookie';\n\nModal.setAppElement('#root');\n\nconst AddTodo = () => {\n\n    const cookies = new Cookies();\n\n    // Set state variables\n\n    const readOnly = useContext(ReadOnlyContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [todo, setTodo] = useState({\n        'subject': '',\n        'duedate': '',\n        'description': '',\n        'sidenote': ''\n    });\n    const [creationState, setCreationState] = useState('');\n\n    // Handle form submission\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setCreationState('LOADING');\n        let data = await fetch(`/api/todo?key=${cookies.get('code')}`, {\n            'method': 'POST',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify(todo)\n        });\n        let response = await data.json();\n        if(data.status === 200){\n            setCreationState('SUCCESS');\n            setTodo(prevTodo => ({...prevTodo, _id: response._id}));\n        }else if(data.status === 400){\n            setCreationState('ERROR_400');\n        }else if(data.status === 403){\n            setCreationState('ERROR_403');\n        };\n    };\n\n    // Handle input changes\n\n    const handleInput = (e, field) => {\n        e.persist();\n        setTodo(prevTodo => {\n            return {...prevTodo, [field]: e.target.value};\n        });\n    };\n\n    // Render status message\n\n    let statusMessage;\n    switch(creationState){\n        case 'LOADING':\n            statusMessage = <div>Loading...</div>;\n            break;\n        case 'SUCCESS':\n            statusMessage = <div>Successfully added todo! <Link to={`/todo/${todo._id}`} className=\"modal-redirect\" onClick={() => setModalIsOpen(false)}>View created todo</Link></div>;\n            break;\n        case 'ERROR_400':\n            statusMessage = <div>Please fill in all the required fields!</div>;\n            break;\n        case 'ERROR_403':\n            statusMessage = <div>You are in read-only mode! Please try again with a valid access token.</div>\n    };\n\n    return (\n        <div>\n            <Link to=\"#\" onClick={() => setModalIsOpen(true)}>Add Todo</Link>\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div>\n                    <div className=\"close-modal\"><button onClick={() => {if(!readOnly) setModalIsOpen(false)}}>X</button></div>\n                    <div className=\"modal-title\">\n                        Add todo\n                    </div>\n                    <form className=\"modal-form\">\n                        <div>\n                            <label htmlFor=\"subject\">*Subject: </label>\n                            <input type=\"text\" value={todo.subject} onChange={e => handleInput(e, 'subject')} name=\"subject\" id=\"subject\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"duedate\">*Due date: </label>\n                            <input type=\"date\" min={new Date().toISOString().split(\"T\")[0]} value={todo.duedate} onChange={e => handleInput(e, 'duedate')} name=\"duedate\" id=\"duedate\"></input>\n                        </div>\n                        <div>\n                            <label htmlFor=\"description\">*Description: </label>\n                            <textarea value={todo.description} onChange={e => handleInput(e, 'description')} name=\"description\" id=\"description\"></textarea>\n                        </div>\n                        <div>\n                            <label htmlFor=\"sidenote\">Sidenotes: </label>\n                            <textarea value={todo.sidenote} onChange={e => handleInput(e, 'sidenote')} name=\"sidenote\" id=\"sidenote\"></textarea>\n                        </div>\n                        <button className=\"button-main\" type=\"submit\" onClick={e => handleSubmit(e)}>Submit</button>\n                    </form>\n                    <div className=\"modal-status\">\n                        {statusMessage}\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\n\nexport default AddTodo;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AddTodo from './AddTodo.js';\nimport Modal from 'react-modal';\nimport Cookies from 'universal-cookie';\n\nconst Nav = (props) => {\n\n    const cookies = new Cookies();\n\n    const [readOnly, setReadOnly] = [props.readOnly, props.setReadOnly];\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [accessCode, setAccessCode] = useState('');\n    const [codeStatus, setCodeStatus] = useState('');\n\n    const removeCookie = () => {\n        cookies.remove('code', {path: '/'});\n        setReadOnly(true);\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setCodeStatus('LOADING');\n        let data = await fetch('/api/login', {\n            'method': 'POST',\n            'mode': 'cors',\n            'headers': {\n                'content-type': 'application/json'\n            },\n            'body': JSON.stringify({code: accessCode})\n        })\n        if(data.status === 403){\n            setCodeStatus('ERROR');\n        }else{\n            setCodeStatus('SUCCESS');\n            setReadOnly(false);\n            let code = await data.json();\n            cookies.set('code', code, {path: '/'});\n        }\n    };\n\n    let status;\n    switch(codeStatus){\n        case 'LOADING':\n            status = <div>Loading...</div>\n            break;\n        case 'ERROR':\n            status = <div>The code you entered is incorrect!</div>\n            break;\n        case 'SUCCESS':\n            status = <div>You are granted editing permission! <Link className=\"modal-redirect\" to='#' onClick={() => setModalIsOpen(false)}>Close modal</Link></div>\n    };\n\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/class\">Classes</Link>\n            <Link to=\"/todo\">Todos</Link>\n            <AddTodo />\n            {readOnly && <Link className=\"nav-edit-enable\" onClick={() => setModalIsOpen(true)} to='#'>Enable editing</Link>}\n            {!readOnly && <Link className=\"nav-edit-disable\" onClick={() => removeCookie()} to='#'>Disable editing</Link>}\n            <Modal isOpen={modalIsOpen} overlayClassName=\"modal-overlay\" className=\"modal-content-small\" portalClassName=\"modal\" parentSelector={() => document.querySelector('.main')}>\n                <div className=\"modal-title\">\n                    Enter the access code here:\n                </div>\n                <input value={accessCode} onChange={e => setAccessCode(e.target.value)}></input>\n                <div style={{margin: '10px'}}>\n                    <button onClick={e => handleSubmit(e)} className=\"button-main\" type=\"submit\">Submit</button>\n                </div>\n                <div className=\"modal-status\">\n                    {status}\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default Nav;\n","import React, { useEffect } from 'react';\n\nconst Redirect = ({ location }) => {\n\n    useEffect(() => {\n        document.location.replace(location.search.split('url=')[1]);\n    }, []);\n\n    return (\n        <div>hi</div>\n    );\n};\n\nexport default Redirect;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home.js';\nimport Todo from './pages/Todo.js';\nimport TodoDetail from './pages/TodoDetail.js';\nimport Class from './pages/Class.js';\nimport ClassDetail from './pages/ClassDetail.js';\nimport NoteDetail from './pages/NoteDetail.js';\nimport Nav from './components/Nav.js';\nimport Redirect from './pages/Redirect.js';\nimport './App.css';\nimport logo from './logo.png';\nimport Cookies from 'universal-cookie';\n\nexport const ReadOnlyContext = React.createContext('');\n\nfunction App() {\n\n  const cookies = new Cookies();\n  const [readOnly, setReadOnly] = useState(true);\n\n  useEffect(() => {\n        const checkPerm = async code => {\n            let data = await fetch('/api/login', {\n                'method': 'GET',\n                'headers': {\n                    'TOKEN': code\n                }\n            });\n            if(data.ok){\n                setReadOnly(false);\n            }else{\n                setReadOnly(true);\n            };\n        };\n        if(cookies.get('code')){\n            checkPerm(cookies.get('code'));\n        };\n    });\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav readOnly={readOnly} setReadOnly={setReadOnly} />\n          <div className=\"main\">\n          <div className=\"logo\">\n            <img src={logo}></img>\n          </div>\n            <ReadOnlyContext.Provider value={readOnly}>\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/todo\" exact component={Todo} />\n                <Route path=\"/todo/:todoID\" exact component={TodoDetail} />\n                <Route path=\"/class\" exact component={Class} />\n                <Route path=\"/class/:classID\" exact component={ClassDetail} />\n                <Route path=\"/class/:classID/:noteID\" exact component={NoteDetail} />\n                <Route path=\"/redirect\" exact component={Redirect} />\n              </Switch>\n            </ReadOnlyContext.Provider>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}